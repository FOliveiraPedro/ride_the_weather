// Mocks generated by Mockito 5.1.0 from annotations
// in ride_the_weather/test/src/weather_description/infra/repositories/get_weather_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ride_the_weather/src/weather_description/infra/datasources/get_weather_datasource.dart'
    as _i2;
import 'package:ride_the_weather/src/weather_description/infra/models/weather_model.dart'
    as _i4;
import 'package:ride_the_weather/src/weather_description/utils/lat_lon.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [GetWeatherDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherDatasource extends _i1.Mock
    implements _i2.GetWeatherDatasource {
  MockGetWeatherDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.WeatherModel?> getInstantWeather(_i5.LatLon? latLon) =>
      (super.noSuchMethod(Invocation.method(#getInstantWeather, [latLon]),
              returnValue: Future<_i4.WeatherModel?>.value())
          as _i3.Future<_i4.WeatherModel?>);
  @override
  _i3.Future<List<_i4.WeatherModel>> getHistoricWeather(_i5.LatLon? latLon) =>
      (super.noSuchMethod(Invocation.method(#getHistoricWeather, [latLon]),
              returnValue:
                  Future<List<_i4.WeatherModel>>.value(<_i4.WeatherModel>[]))
          as _i3.Future<List<_i4.WeatherModel>>);
}
